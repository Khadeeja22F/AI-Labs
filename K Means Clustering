{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7b05add1-780e-4d46-9d55-bb85e6682b68",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\kk\\anaconda3\\Lib\\site-packages\\sklearn\\cluster\\_kmeans.py:1429: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cluster Centers (Scaled):\n",
      "[[0.83333333 0.04301075]\n",
      " [0.2        1.        ]\n",
      " [0.26666667 0.28315412]]\n",
      "\n",
      "Data with Clusters:\n",
      "   InvoiceNo InvoiceDate      Description  Quantity  UnitPrice  CustomerID  \\\n",
      "0       1001  2023-12-01          T-shirt        10       15.0       12345   \n",
      "1       1002  2023-12-02       Coffee Mug        20        7.5       12346   \n",
      "2       1003  2023-12-03         Notebook        15        3.5       12347   \n",
      "3       1004  2023-12-04       Laptop Bag         5       25.0       12348   \n",
      "4       1005  2023-12-05       Headphones         8       50.0       12349   \n",
      "5       1006  2023-12-06  Smartphone Case        12       10.0       12350   \n",
      "\n",
      "     Country  cluster  \n",
      "0        USA        2  \n",
      "1     Canada        0  \n",
      "2         UK        0  \n",
      "3  Australia        2  \n",
      "4      India        1  \n",
      "5    Germany        2  \n"
     ]
    }
   ],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "import pandas as pd\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Sample dataset\n",
    "data = {\n",
    "    'InvoiceNo': [1001, 1002, 1003, 1004, 1005, 1006],\n",
    "    'InvoiceDate': ['2023-12-01', '2023-12-02', '2023-12-03', '2023-12-04', '2023-12-05', '2023-12-06'],\n",
    "    'Description': ['T-shirt', 'Coffee Mug', 'Notebook', 'Laptop Bag', 'Headphones', 'Smartphone Case'],\n",
    "    'Quantity': [10, 20, 15, 5, 8, 12],\n",
    "    'UnitPrice': [15.00, 7.50, 3.50, 25.00, 50.00, 10.00],\n",
    "    'CustomerID': [12345, 12346, 12347, 12348, 12349, 12350],\n",
    "    'Country': ['USA', 'Canada', 'UK', 'Australia', 'India', 'Germany']\n",
    "}\n",
    "\n",
    "# Convert to DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "# Selecting numerical features for clustering\n",
    "X = df[['Quantity', 'UnitPrice']]\n",
    "# Scaling the data\n",
    "scaler = MinMaxScaler()\n",
    "X_scaled = scaler.fit_transform(X)\n",
    "# Applying K-Means clustering\n",
    "km = KMeans(n_clusters=3, random_state=42)\n",
    "y_predicted = km.fit_predict(X_scaled)\n",
    "\n",
    "# Adding the cluster labels to the DataFrame\n",
    "df['cluster'] = y_predicted\n",
    "# Plotting the clusters\n",
    "plt.figure(figsize=(8, 6))\n",
    "for cluster in range(3):\n",
    "    cluster_points = df[df['cluster'] == cluster]\n",
    "    plt.scatter(cluster_points['Quantity'], cluster_points['UnitPrice'], label=f'Cluster {cluster}')\n",
    "# Plotting cluster centers\n",
    "centers = scaler.inverse_transform(km.cluster_centers_)\n",
    "plt.scatter(centers[:, 0], centers[:, 1], s=200, c='red', marker='X', label='Centroids')\n",
    "plt.title('K-Means Clustering of Invoice Data')\n",
    "plt.xlabel('Quantity')\n",
    "plt.ylabel('UnitPrice')\n",
    "plt.legend()\n",
    "plt.grid()\n",
    "plt.show()\n",
    "\n",
    "# Output results\n",
    "print(\"Cluster Centers (Scaled):\")\n",
    "print(km.cluster_centers_)\n",
    "print(\"\\nData with Clusters:\")\n",
    "print(df)\n",
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
